# coding: utf-8

import base64
import cv2
import numpy as np
from keras import models, backend
import util.app_util as util
import util.logger as logger

log = logger.Logger(__name__)


def load_images(img):
    interval = 5
    length = 67
    for x in range(40, img.shape[0] - length, interval + length):
        for y in range(interval, img.shape[1] - length, interval + length):
            yield img[x:x + length, y:y + length]


def load_text(img, offset=0):
    # 得到图像中的文本部分
    return img[3:22, 120 + offset:177 + offset]


def preprocess_input(x):
    x = x.astype('float32')
    # 我是用cv2来读取的图片，其已经是BGR格式了
    mean = [103.939, 116.779, 123.68]
    x -= mean
    return x


def get_text(img, offset=0):
    text = load_text(img, offset)
    text = cv2.cvtColor(text, cv2.COLOR_BGR2GRAY)
    text = text / 255.0
    h, w = text.shape
    text.shape = (1, h, w, 1)
    return text


def base64_to_image(base64_code):
    # base64解码
    img_data = base64.b64decode(base64_code)
    # 转换为np数组
    img_array = np.frombuffer(img_data, np.uint8)
    # 转换成opencv可用格式
    img = cv2.imdecode(img_array, cv2.COLOR_RGB2BGR)

    return img


def verify(base64_code):
    import os

    os.environ["TF_CPP_MIN_LOG_LEVEL"] = "3"

    backend.clear_session()
    verify_titles = ['打字机', '调色板', '跑步机', '毛线', '老虎', '安全帽', '沙包', '盘子', '本子', '药片', '双面胶', '龙舟', '红酒', '拖把', '卷尺',
                     '海苔', '红豆', '黑板', '热水袋', '烛台', '钟表', '路灯', '沙拉', '海报', '公交卡', '樱桃', '创可贴', '牌坊', '苍蝇拍', '高压锅',
                     '电线', '网球拍', '海鸥', '风铃', '订书机', '冰箱', '话梅', '排风机', '锅铲', '绿豆', '航母', '电子秤', '红枣', '金字塔', '鞭炮',
                     '菠萝', '开瓶器', '电饭煲', '仪表盘', '棉棒', '篮球', '狮子', '蚂蚁', '蜡烛', '茶盅', '印章', '茶几', '啤酒', '档案袋', '挂钟', '刺绣',
                     '铃铛', '护腕', '手掌印', '锦旗', '文具盒', '辣椒酱', '耳塞', '中国结', '蜥蜴', '剪纸', '漏斗', '锣', '蒸笼', '珊瑚', '雨靴', '薯条',
                     '蜜蜂', '日历', '口哨']
    # 读取并预处理验证码
    captcha = base64_to_image(base64_code)
    text = get_text(captcha)

    captcha_item = np.array(list(load_images(captcha)))
    captcha_item = preprocess_input(captcha_item)

    text_list = []
    # 识别文字
    model = models.load_model(util.get_root_path() + os.path.sep + 'model' + os.path.sep + 'model.v2.0.h5')
    label = model.predict(text)
    label = label.argmax()
    text = verify_titles[label]
    text_list.append(text)
    # 获取下一个词
    # 根据第一个词的长度来定位第二个词的位置
    if len(text) == 1:
        offset = 27
    elif len(text) == 2:
        offset = 47
    else:
        offset = 60
    text = get_text(captcha, offset=offset)
    if text.mean() < 0.95:
        label = model.predict(text)
        label = label.argmax()
        text = verify_titles[label]
        text_list.append(text)
    log.info("题目为: {}".format(text_list))
    # 加载图片分类器
    model = models.load_model(util.get_root_path() + os.path.sep + 'model' + os.path.sep + '12306.image.model.h5')
    labels = model.predict(captcha_item)
    labels = labels.argmax(axis=1)
    results = []
    for pos, label in enumerate(labels):
        text = verify_titles[label]
        log.info('选项{}.{}'.format(pos + 1, text))
        if text in text_list:
            results.append(str(pos + 1))
    return results


if __name__ == '__main__':
    res = verify(
        "")
    log.info(res)
